/*
Deployment script for BookCataloque

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "BookCataloque"
:setvar DefaultFilePrefix "BookCataloque"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering [dbo].[Authors]...';


GO
ALTER TABLE [dbo].[Authors]
    ADD [NumberOfBooks] SMALLINT DEFAULT 0 NOT NULL;


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF NOT EXISTS (SELECT 1 FROM [dbo].[Books] )
BEGIN
	SET IDENTITY_INSERT [dbo].[Books] ON 
	INSERT [dbo].[Books] ([BookID], [Title], [PublicationDate], [Rating], [Pages]) VALUES (1, N'BookTitle1', CAST(N'1999-10-27' AS Date), NULL, 500)
	INSERT [dbo].[Books] ([BookID], [Title], [PublicationDate], [Rating], [Pages]) VALUES (2, N'BookTitle2', CAST(N'2016-06-22' AS Date), NULL, 200)
	INSERT [dbo].[Books] ([BookID], [Title], [PublicationDate], [Rating], [Pages]) VALUES (3, N'BookTitle3', CAST(N'2003-05-02' AS Date), NULL, 300)
	INSERT [dbo].[Books] ([BookID], [Title], [PublicationDate], [Rating], [Pages]) VALUES (4, N'BookTitle4', CAST(N'2000-10-07' AS Date), NULL, 120)
	SET IDENTITY_INSERT [dbo].[Books] OFF
END
IF NOT EXISTS (SELECT 1 FROM [dbo].[Authors] )
BEGIN
    SET IDENTITY_INSERT [dbo].[Authors] ON 
	INSERT [dbo].[Authors] ([AuthorID], [FirstName], [LastName]) VALUES (1, N'AuthorFirstName1', N'AuthorLastName1')
	INSERT [dbo].[Authors] ([AuthorID], [FirstName], [LastName]) VALUES (2, N'AuthorFirstName2', N'AuthorLastName2')
	INSERT [dbo].[Authors] ([AuthorID], [FirstName], [LastName]) VALUES (3, N'AuthorFirstName3', N'AuthorLastName3')
	INSERT [dbo].[Authors] ([AuthorID], [FirstName], [LastName]) VALUES (4, N'AuthorFirstName4', N'AuthorLastName4')
	SET IDENTITY_INSERT [dbo].[Authors] OFF
END
IF NOT EXISTS (SELECT 1 FROM [dbo].[BookAuthors] )
BEGIN
	INSERT [dbo].[BookAuthors] ([BookID], [AuthorID]) VALUES (1, 1)
	INSERT [dbo].[BookAuthors] ([BookID], [AuthorID]) VALUES (1, 2)
	INSERT [dbo].[BookAuthors] ([BookID], [AuthorID]) VALUES (2, 2)
	INSERT [dbo].[BookAuthors] ([BookID], [AuthorID]) VALUES (2, 3)
	INSERT [dbo].[BookAuthors] ([BookID], [AuthorID]) VALUES (2, 4)
	INSERT [dbo].[BookAuthors] ([BookID], [AuthorID]) VALUES (3, 3)
	INSERT [dbo].[BookAuthors] ([BookID], [AuthorID]) VALUES (4, 1)
	INSERT [dbo].[BookAuthors] ([BookID], [AuthorID]) VALUES (4, 4)
END
GO

GO
PRINT N'Update complete.';


GO
